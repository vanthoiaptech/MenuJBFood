import React, {Component} from 'react';
import {View, StyleSheet, Alert, Dimensions} from 'react-native';
import MapView, {PROVIDER_GOOGLE, Marker} from 'react-native-maps';
navigator.geolocation = require('@react-native-community/geolocation');

const {width, height} = Dimensions.get('window');
const ASPECT_RATIO = width / height;
const LATTITUDE_DELTA = 0.0922;
const LONGTITUDE_DELTA = LATTITUDE_DELTA * ASPECT_RATIO;

class Maps extends Component {
  constructor(props) {
    super(props);
    this.state = {
      initialPosition: {
        latitude: 0,
        longitude: 0,
        latitudeDelta: 0,
        longitudeDelta: 0,
      },
      makerPosition: {
        latitude: 0,
        longitude: 0,
      },
    };
  }

  watchID: ?number = null;

  componentDidMount() {
    navigator.geolocation.getCurrentPosition(
      position => {
        let lat = parseFloat(position.coords.latitude);
        let long = parseFloat(position.coords.longitude);

        let initialRegion = {
          latitude: lat,
          longitude: long,
          latitudeDelta: LATTITUDE_DELTA,
          longitudeDelta: LONGTITUDE_DELTA,
        };

        this.setState({initialPosition: initialRegion});
        this.setState({makerPosition: initialRegion});
      },
      error => Alert.alert(JSON.stringify(error)),
      {enableHighAccuracy: true, timeout: 20000, maximumAge: 1000},
    );

    this.watchID = navigator.geolocation.watchPosition(position => {
      let lat = parseFloat(position.coords.latitude);
      let long = parseFloat(position.coords.longitude);

      let lastRegion = {
        latitude: lat,
        longitude: long,
        latitudeDelta: LATTITUDE_DELTA,
        longitudeDelta: LONGTITUDE_DELTA,
      };

      this.setState({initialPosition: lastRegion});
      this.setState({makerPosition: lastRegion});
    });
  }

  componentWillUnmount() {
    navigator.geolocation.clearWatch(this.watchID);
  }

  render() {
    const {container, map, radius, marker} = styles;
    return (
      <View style={container}>
        {/* <MapView
          provider={PROVIDER_GOOGLE} // remove if not using Google Maps
          style={styles.map}
          region={{
            latitude: 16.07633,
            longitude: 108.21969,
            latitudeDelta: 0.015,
            longitudeDelta: 0.0121,
          }}
        /> */}
        <MapView style={map} initialRegion={this.state.initialPosition}>
          <MapView.Marker coordinate={this.state.makerPosition}>
            <View style={radius}>
              <View style={marker} />
            </View>
          </MapView.Marker>
        </MapView>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    ...StyleSheet.absoluteFillObject,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  map: {
    ...StyleSheet.absoluteFillObject,
    left: 0,
    right: 0,
  },
  radius: {
    backgroundColor: 'blue',
    borderRadius: 25,
    height: 50,
    width: 50,
  },
  marker: {
    ...StyleSheet.absoluteFillObject,
    backgroundColor: 'blue',
    height: 20,
    width: 20,
    borderRadius: 10,
    borderWidth: 3,
    borderColor: '#FFF',
  },
});

export default Maps;
